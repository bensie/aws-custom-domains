#!/bin/bash
pwd="`pwd`"
version=$(<VERSION)
version=${version// /}

if [ -d build ]; then rm -rf build; fi
mkdir -p build/api-gateway
mkdir -p build/lambda/SetupCustomDomain
mkdir -p build/dynamodb
mkdir -p build/cloudformation

# API Gateway Handlers
pushd api-gateway
  for handler in */; do
    pushd $handler
      rm -rf node_modules
      yarn install
      zip -r $pwd/build/api-gateway/${handler%?}.zip .
    popd
  done
popd

# Lambda Functions
pushd lambda
  pushd SetupCustomDomain
    for lambdafunction in */; do
      pushd $lambdafunction
        rm -rf node_modules
        yarn install
        zip -r $pwd/build/lambda/SetupCustomDomain/${lambdafunction%?}.zip .
      popd
    done
  popd
popd

# DynamoDB Stream Functions
pushd dynamodb
  for lambdafunction in */; do
    pushd $lambdafunction
      rm -rf node_modules
      yarn install
      zip -r $pwd/build/dynamodb/${lambdafunction%?}.zip .
    popd
  done
popd

# CloudFormation Template
pushd cloudformation
  cp stack.yml $pwd/build/cloudformation/stack.yml
  printf "\nMappings:\n  StaticVariables:\n    Versions:\n      Current: $version" >> $pwd/build/cloudformation/stack.yml
popd
